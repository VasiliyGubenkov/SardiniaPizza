# Generated by Django 5.0.7 on 2024-08-02 14:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category_of_drinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Создайте категорию напитков', max_length=100, unique=True, verbose_name='Категория напитков')),
                ('description', models.TextField(blank=True, help_text='Опишите эту категорию напитков', null=True, verbose_name='Описание категории')),
            ],
        ),
        migrations.CreateModel(
            name='Category_of_pizza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Создайте категорию пиццы', max_length=100, unique=True, verbose_name='Категория пиццы')),
                ('description', models.TextField(blank=True, help_text='Опишите эту категорию пиццы', null=True, verbose_name='Описание категории')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_login', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Drink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Напишите название напитка', max_length=100, unique=True, verbose_name='Название напитка')),
                ('description', models.TextField(blank=True, help_text='Опишите напиток', null=True, verbose_name='Описание')),
                ('size', models.CharField(help_text='Укажите обьём напитка', max_length=100, verbose_name='Обьём напитка')),
                ('prise', models.DecimalField(decimal_places=2, help_text='Укажите цену напитка', max_digits=5, verbose_name='Цена напитка')),
                ('category_of_drinks', models.ManyToManyField(help_text='Выберите категорию напитка', related_name='drinks', to='Others.category_of_drinks', verbose_name='Категория напитка')),
            ],
        ),
        migrations.CreateModel(
            name='Pizza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Напишите название пиццы', max_length=100, unique=True, verbose_name='Название пиццы')),
                ('description', models.TextField(blank=True, help_text='Опишите пиццу', null=True, verbose_name='Описание')),
                ('size', models.CharField(choices=[('33cm.', '33cm.'), ('40cm.', '40cm.')], help_text='Выберите размер пиццы', max_length=100, verbose_name='Размер пиццы')),
                ('prise', models.DecimalField(decimal_places=2, help_text='Укажите цену пиццы', max_digits=5, verbose_name='Цена пиццы')),
                ('category_of_pizza', models.ManyToManyField(help_text='Выберите категорию пиццы', related_name='pizzas', to='Others.category_of_pizza', verbose_name='Категория пиццы')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_of_delivery', models.TextField(blank=True, help_text='Укажите адрес доставки заказа', null=True, verbose_name='Адрес доставки')),
                ('content_of_order', models.TextField(blank=True, help_text='Укажите товары и их количество', null=True, verbose_name='Содержание заказа')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='Укажите общую сумму заказа', max_digits=5, null=True, verbose_name='Общая сумма заказа')),
                ('status_of_payment', models.BooleanField(blank=True, choices=[('False', 'Не оплачен'), ('True', 'Оплачен')], default=False, help_text='Выберите статус оплаты', null=True, verbose_name='Статус оплаты')),
                ('status_of_delivery', models.BooleanField(blank=True, choices=[('False', 'Не доставлено'), ('True', 'Доставлено')], default=False, help_text='Выберите статус доставки', null=True, verbose_name='Статус доставки')),
                ('user', models.ForeignKey(blank=True, help_text='Выберите пользователя', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='Others.user', verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(verbose_name='ID товара')),
                ('price_of_good', models.DecimalField(decimal_places=2, help_text='Укажите цену товара', max_digits=5, verbose_name='Цена товара')),
                ('quantity_of_good', models.DecimalField(decimal_places=0, default=1, help_text='Укажите количество товара', max_digits=5, verbose_name='Количество товара')),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(models.Q(('app_label', 'app_name'), ('model', 'pizza')), models.Q(('app_label', 'app_name'), ('model', 'drink')), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Тип товара')),
                ('user', models.ForeignKey(blank=True, help_text='Выберите пользователя', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basket', to='Others.user', verbose_name='Пользователь')),
            ],
        ),
    ]
